# Question1
int a = 0, b = 0; 
for (i = 0; i < N; i++) { 
    a = a + rand(); 
} 
for (j = 0; j < M; j++) { 
    b = b + rand(); 
} 

#Time complexity = O(N + M) 
#space = O(1)


# Question 2
int a = 0; 
for (i = 0; i < N; i++) { 
    for (j = N; j > i; j--) { 
        a = a + i + j; 
    } 
} 

#Time complexity = O(N*N)
#space = O(1)


#Questioin 3
int i, j, k = 0; 
for (i = n / 2; i <= n; i++) { 
    for (j = 2; j <= n; j = j * 2) { 
        k = k + n / 2; 
    } 
} 

#Time complexity = O(nlogn)
#Explanation:If you notice, j keeps doubling till it is less than or equal to n. Number of times, we can double a number till it is less than n would be log(n).
#Letâ€™s take the examples here.
#for n = 16, j = 2, 4, 8, 16
#for n = 32, j = 2, 4, 8, 16, 32
#So, j would run for O(log n) steps.
#i runs for n/2 steps.
#So, total steps = O(n/ 2 * log (n)) = O(n*logn)

